// <auto-generated />
using System;
using Investimento.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Investimento.API.Migrations
{
    [DbContext(typeof(InvestimentoContext))]
    [Migration("20220117190325_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Investimento.API.Models.Ativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClasseDeAtivoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClasseDeAtivoId");

                    b.ToTable("Ativos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClasseDeAtivoId = 7,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 396, DateTimeKind.Local).AddTicks(1641),
                            Descricao = "PETR4",
                            Inativo = true
                        },
                        new
                        {
                            Id = 2,
                            ClasseDeAtivoId = 7,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 396, DateTimeKind.Local).AddTicks(4890),
                            Descricao = "BBDC4",
                            Inativo = true
                        },
                        new
                        {
                            Id = 3,
                            ClasseDeAtivoId = 6,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 396, DateTimeKind.Local).AddTicks(4975),
                            Descricao = "Dinheiro",
                            Inativo = true
                        });
                });

            modelBuilder.Entity("Investimento.API.Models.ClasseDeAtivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Iantivo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ClasseDeAtivos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 393, DateTimeKind.Local).AddTicks(4181),
                            Descricao = "Caderneta de Poupança",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 2,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8543),
                            Descricao = "Títulos Públicos",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 3,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8628),
                            Descricao = "CDB",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 4,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8632),
                            Descricao = "LCI",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 5,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8634),
                            Descricao = "LCA",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 6,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8641),
                            Descricao = "Caixa",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 7,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8643),
                            Descricao = "Ações",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 8,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8645),
                            Descricao = "Fundos Imobiliários",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 9,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8650),
                            Descricao = "ETFs",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 10,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8654),
                            Descricao = "Opções",
                            Iantivo = true
                        },
                        new
                        {
                            Id = 11,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 394, DateTimeKind.Local).AddTicks(8656),
                            Descricao = "Mercado Futuro",
                            Iantivo = true
                        });
                });

            modelBuilder.Entity("Investimento.API.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 396, DateTimeKind.Local).AddTicks(5713),
                            Descricao = "Alex Quintes de Resende",
                            Inativo = true
                        },
                        new
                        {
                            Id = 2,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 396, DateTimeKind.Local).AddTicks(8306),
                            Descricao = "Caio Resende",
                            Inativo = true
                        });
                });

            modelBuilder.Entity("Investimento.API.Models.ClienteCorretora", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CorretoraId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClienteId", "CorretoraId");

                    b.HasIndex("CorretoraId");

                    b.ToTable("ClientesCorretoras");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            CorretoraId = 1
                        },
                        new
                        {
                            ClienteId = 1,
                            CorretoraId = 2
                        },
                        new
                        {
                            ClienteId = 2,
                            CorretoraId = 1
                        });
                });

            modelBuilder.Entity("Investimento.API.Models.Corretora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Inativo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Corretoras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 396, DateTimeKind.Local).AddTicks(9036),
                            Descricao = "Clear",
                            Inativo = true
                        },
                        new
                        {
                            Id = 2,
                            DataDeCriacao = new DateTime(2022, 1, 17, 16, 3, 25, 397, DateTimeKind.Local).AddTicks(1634),
                            Descricao = "MyCap",
                            Inativo = true
                        });
                });

            modelBuilder.Entity("Investimento.API.Models.Ativo", b =>
                {
                    b.HasOne("Investimento.API.Models.ClasseDeAtivo", "ClasseDeAtivo")
                        .WithMany()
                        .HasForeignKey("ClasseDeAtivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Investimento.API.Models.ClienteCorretora", b =>
                {
                    b.HasOne("Investimento.API.Models.Cliente", "Cliente")
                        .WithMany("ClientesCorretoras")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Investimento.API.Models.Corretora", "Corretora")
                        .WithMany("ClientesCorretoras")
                        .HasForeignKey("CorretoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
